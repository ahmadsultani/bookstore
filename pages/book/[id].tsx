import { useRouter } from "next/router";
import Navbar from "@/components/organisms/Navbar";
import Image from "next/image";
import Head from "next/head";
import { getBookById } from "@/service/book";
import { BookTypes } from "@/types";
import { useCallback, useEffect, useMemo, useState } from "react";

export default function BookDetail() {
	const router = useRouter();
  const { id } = useMemo(() => router.query, [router.query]);
	const [book, setBook] = useState<BookTypes>();

  const getBook = useCallback(async () => {
    const res = await getBookById(id as string);

    if (!res) {
			router.push("/404");
    }

    if (
      res.message === "Unauthorized" ||
      res.message === "jwt expired" ||
      res.message === "Invalid token"
    ) {
      router.push("/login");
    }

    const { data } = res;

    return data as BookTypes;
  }, [id, router]);

	useEffect(() => {
		if (!id) return;
		getBook().then((data) => setBook(data));
	}, [id, getBook]);

	const shadow = "shadow-[-5px_0px_15px_8px_rgba(0,0,0,0.25)]";
	const btnstyle = "px-[15px] py-[5px] bg-white items-center justify-center";

  return (
    <>
      <Head>
        <title>{book?.title}</title>
        <meta name="description" content="Generated by create next app" />
      </Head>

      <Navbar />
      <main className={` flex px-[60px] py-[65px] bg-[#FBF8F4] gap-[50px]`}>
        <section className="flex shrink-0">
          {" "}
          {/*Left */}
          <div className={` bg-[#d9d9d965] px-[40px] py-[20px] rounded-md `}>
            <Image
              src={"/assets/images/Book.png"}
              alt={""}
              height={300}
              width={300}
              className={`overflow-hidden aspect-auto w-[250px] rounded-lg ${shadow}`}
            />
          </div>
        </section>
        <section className="flex flex-col gap-[15px]">
          {/*Mid */}
          <h1 className="font-bold text-[36px]">
            {/*Title*/}
            {book?.title}
          </h1>
          <h2 className="text-[15px] text-[rgb(90,90,90)] font-semibold ">
            {/*Author*/}
            DeLuca Jen
          </h2>
          <div>Rating</div>
          <div className="flex gap-[8px] text-[30px] ">
            <p className="font-semibold">IDR</p>
            <p className="font-semibold">{book?.price}</p>
          </div>
          <div>
            Lorem ipsum dolor sit, amet consectetur adipisicing elit. Eligendi
            corporis nobis ipsum itaque voluptatem molestiae quae sapiente
            magnam asperiores accusantium, molestias harum tenetur nemo
            explicabo in libero similique unde architecto aliquid? Saepe sequi
            quam voluptatibus recusandae, dolores obcaecati iste repudiandae
            vero architecto. Tempore magni ratione inventore sed quas iure minus
            commodi sapiente, enim itaque porro eos atque fuga laudantium.
            Veritatis ipsa veniam magni vel, sint rerum nulla, ipsum voluptatum
            nisi cum impedit! Sequi, ullam at, dolore in asperiores expedita
            pariatur illo laboriosam provident voluptatum ipsum non! Libero,
            soluta recusandae! Voluptatum iure temporibus quidem nulla
            reprehenderit soluta reiciendis recusandae libero sequi!
          </div>
        </section>
        <section>
          {/*Right */}
          <div className="flex flex-col bg-green rounded-md p-[30px]">
            <h1>Quantity</h1>
            <div className="flex gap-[20px] rounded-md border-[1px] border-black items-center justify-center overflow-hidden">
              <button className={`${btnstyle}`}>+</button>
              <section className="items-center justify-center">sds</section>
              <button className={`${btnstyle}`}>-</button>
            </div>
          </div>
        </section>
      </main>
    </>
  );
}

interface GetServerSideProps {
	req: {
		cookies: {
			token: string;
		};
	}
}

export async function getServerSideProps({ req }: GetServerSideProps) {

	const { token } = req.cookies;

	if (!token) {
		return {
			redirect: {
				destination: "/login",
				permanent: false,
			},
		};
	}

	return {
		props: {},
	};
}
